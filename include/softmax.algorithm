#*
#* Copyright (C) 2017-2019 Alibaba Group Holding Limited
#*
#* Licensed under the Apache License, Version 2.0 (the "License");
#* you may not use this file except in compliance with the License.
#* You may obtain a copy of the License at
#*
#*      http://www.apache.org/licenses/LICENSE-2.0
#*
#* Unless required by applicable law or agreed to in writing, software
#* distributed under the License is distributed on an "AS IS" BASIS,
#* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#* See the License for the specific language governing permissions and
#* limitations under the License.

def Softmax_compute(x_0, axis = 1):
    orig_shape = x_0.shape
    if np.isscalar(x_0) or (x_0.ndim == 1):
      x_0 = np.asarray(x_0).reshape(1, -1)
      return np.exp(x_0) / np.sum(np.exp(x_0), axis=1)
    elif x_0.ndim > 2:
      a = 1
      for i in range(axis):
        a = a * x_0.shape[i]
      x_0 = x_0.reshape(np.int32(a), -1)
    max_x = np.max(x_0, axis=1).reshape((-1, 1))
    exp_x = np.exp(x_0 - max_x)
    return (exp_x / np.sum(exp_x, axis=1).reshape((-1, 1))).reshape(orig_shape)
